<?php
// $Id: gtrans.module,v 1.0.2.2 2008/07/10 10:28:50 owahab Exp $

/**
 * @file
 * Used to translate all pages on-the-fly using Google Translate service.
 *
 * @author
 * Omar Abdel-Wahab http://owahab.com
 */

/**
 * Implementation of hook_help().
 */
function gtrans_help($section){
  $output = '';
  
  switch ($section) {
	case 'admin/modules#gtrans':
	  $output = 'gtrans';
	  break;
	case 'admin/modules#description':
	case 'admin/help#gtrans':
	  $output = t('Translates site using Google Translation.\nA block has been created to allow the user to change languages, enable the block to start using.');
	  break;
	case 'user/help#gtrans':
	  $output = t('Translates site using Google Translation service.');
	  break;
	}
  return $output;
}

/**
 * Implementation of hook_menu().
 */
function gtrans_menu(){
  $items = array();
  
  $items['admin/settings/gtrans'] = array(
    'title' => t('Google Translation'),
    'description' => t('Control Google Translate service.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gtrans_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'gtrans.module',
  );
  return $items;
}

/**
 * Settings form.
 */
function gtrans_settings(){
  $languages = gtrans_get_avail_langs();
  $form['gtrans_enabled']=array(
        '#type'=>'radios',
	'#title'=>t('Status'),
	'#options' => array('on'=>t('Enabled'),'off'=>t('Disabled')),
	'#default_value' => variable_get('gtrans_enabled', 'off'),
  );
  $form['general'] = array(
      '#type' => 'fieldset',
      '#title' => t('General'),
      '#collapsible' => TRUE,
  );
  $form['general']['gtrans_general_googlepopup']=array(
        '#type'=>'radios',
	'#title'=>t('Google Popups'),
	'#options' => array('on'=>t('Enabled'),'off'=>t('Disabled')),
	'#default_value' => variable_get('gtrans_general_googlepopup', 'off'),
  );
  $form['general']['gtrans_google_url']=array(
        '#type'=>'textfield',
	'#title'=>t('Google URL'),
	'#default_value' => variable_get('gtrans_google_url', '209.85.171.104'),
        '#description' => 'Base domain to send data to be translated to. Default is 209.85.171.104',
  );
  $form['general']['gtrans_general_blocktype']=array(
        '#type'=>'radios',
	'#title'=>t('Block Type'),
	'#options' => array('list'=>t('List'),'links'=>t('Links')),
	'#default_value' => variable_get('gtrans_general_blocktype', 'list'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_block().
 */
function gtrans_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
	 $blocks[0]['info'] = t('Change Language');
	 return $blocks;
  }
  elseif ($op == 'view') {
		$block = array();
		switch ($delta) {
			case 0:
				$block['subject'] = t('Change Language');
				$block['content'] = gtrans_get_block_contents();
				return $block;
		}
  }
}

function gtrans_get_block_contents() {
  switch(variable_get('gtrans_general_blocktype', 'list')) {
  case 'list':
    return drupal_get_form('gtrans_change_language_form');
  case 'links':
    // get enabled languages
    $lang = gtrans_get_avail_langs();
    $req_uri = $_GET['destination']; //str_replace('destination=', '', url_decode(drupal_get_destination()));

    $links = '';
    foreach($lang as $key => $val){
      $links = $links.'<div class="gtrans_langlink" id="gtrans_langlink_'.$key .'"><a href="/gtrans/'.$key .'?'.drupal_get_destination().'">'.$val.'</a></div>';
    }
    return $links;
    break;
  }
}

function gtrans_change_language_form(){
        global $language;
        $lang=language_default();
        //drupal_set_message($cur_lang);

	// get enabled languages
	$hls = gtrans_get_avail_langs();

	$form['hl']  = array('#type' => 'select',
	  '#default_value' => ($_SESSION['hl']? $_SESSION['hl'] : $lang->language),
	  '#options' =>$hls,
	);
  	$form['submit'] = array('#type' => 'submit',
	  '#value' => t('Change'),
	);
        $form['#submit'] = array('gtrans_change_language_form_submit');
        
	return $form;
}
/**
 * form submit handler().
 */
function gtrans_change_language_form_submit($form, &$form_state){
  $_SESSION['hl'] = $form_state['values']['hl'];
  $_SESSION['drupal_hl'] = $form_state['values']['hl'];
}

/**
 * Implementation of hook_init().
 */
function gtrans_init(){
  /*
   */
  if(_garg(0)=='gtrans') {
    global $base_url;
    $req_uri = $_GET['destination']; //str_replace('destination=', '', url_decode(drupal_get_destination()));
  
    $_SESSION['hl'] = _garg(1);
    $_SESSION['drupal_hl'] = _garg(1);
    die('
      <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
      <html>
        <head>
          <title>Language change</title>
          <meta http-equiv="REFRESH" content="0;url='.$base_url.'/'.$req_uri.'">
        </HEAD>
        <BODY>Your language has been changed.</BODY>
      </HTML>');
  }

  /*
	avoid calling translation for POSTed pages
	and for pages called by Google Translate service,
	otherwise we'll end up going in a chain of calls
	of the current drupal page
   */
  
  if(!$_GET['gtrans'] && !$_POST && _garg(0)!='admin'){
    if($_SESSION['drupal_hl'] && variable_get('gtrans_enabled', 'off')=='on'){
      gtrans_translate_page($_SESSION['drupal_hl']);
    }
  }
}

/**
 * The real stuf: translate the whole drupal page and send it to the browser.
 */
function gtrans_translate_page($hl='fr'){
  global $language ;
  $cur_lang = $language->language;
  $default_lang=language_default();

  // make sure we're not translating from and to the same language.
  // also make sure that drupals alt lang system isn't in use.
  if($hl != $default_lang->language && $default_lang->language == $cur_lang){
                $languages = gtrans_get_avail_langs();
		global $base_url;
		// Google Translate URL
		$url = variable_get('gtrans_google_url', '209.85.171.104');
		// prepare the request, add a parameter to prevent 
		// recursively attempting to translate
		$req_uri = str_replace('destination=', '', drupal_get_destination());
		$uri = 'translate_c?hl=en&ie=UTF8&oe=UTF8&sl='.$cur_lang.'&tl='.$hl.'&u='.urlencode($base_url.'/').$req_uri.urlencode('?gtrans=true');
		// connecting...
		$fp=fsockopen($url, 80, $errno, $errstr, 60);
		if(!$fp){
			watchdog('user', t('Attempt failed to translate page').' '.$_SERVER['REQUEST_URI'].' '.t('to').' '.$languages[$hl].': Couldn\'t contact Google Translate server');
			break;
		}
		else{
			// connected!
			// prepare headers to send
			$out = "GET /".$uri." HTTP/1.1\r\n";
			$out .= "Host: ".$url."\r\n";
			$out .= "Connection: Close\r\n\r\n";
			// send header
			fwrite($fp, $out);
			// receive data
			$body = false;
			while (!feof($fp)) {
			$s = fgets($fp, 1024);
			if ( $body )
				$content .= $s;
			// ignore HTTP headers
			if ( $s == "\r\n" )
						 $body = true;
			}
			// close the connection
			fclose($fp);
			// check the data we got:
			if(!strlen($content)){
				watchdog('user', t('Attempt failed to translate page').' '.$_SERVER['REQUEST_URI'].' '.t('to').' '.$languages[$hl].': No content from Google Translate server');
			}
			else{
				//*** now prepare content ***
                                // trim off excess data that might have tagged along
				$content = strstr($content,'<!DOCTYPE');
				$content = substr($content,0,strpos($content,'</html>')+7);
				// Google Translate modifes all links to point to it,
				// we will reverse this action and take the links back
				$content = preg_replace('/<a href="(.*?)u=(.*?)&amp;usg=(.*?)">/', '<a href="$2">', $content);
				// now translate HTML entites
				$content = str_replace(str_replace('%7C', '&#037;7C', htmlentities($uri)), '', $content);
                                // remove the popups google puts in place for translated text
                                if(variable_get('gtrans_general_googlepopup', 'off')=='off') {
                                  $content = str_replace('_tipon(this)','',$content);
                                  $content = str_replace('_tipoff()','',$content);
                                }
	 			// set language in session
				$_SESSION['drupal_hl'] = $hl;
				// shoot the translated page and end script run
				if(strlen($content)>30){
					die($content);
				}
				else{
					watchdog('user', t('Attempt failed to translate page').' '.$_SERVER['REQUEST_URI'].' '.t('to').' '.$languages[$hl].': Content I got was: '.$content);
				}
			}
		}
  }
}

/**
 * A duplicate of arg()
 *
 */
function _garg($index) {
  static $arguments, $q;

  if (empty($arguments) || $q != $_GET['q']) {
    $arguments = explode('/', $_GET['q']);
    $q = $_GET['q'];
  }

  if (isset($arguments[$index])) {
    return $arguments[$index];
  }
}

function gtrans_get_avail_langs(){
  // Get a list of enabled languages.
  $list = array();
  $languages = language_list('language');
  foreach ($languages as $lang) {
    if($lang->enabled) $list[$lang->language]=t($lang->name);
  }
  return $list;
}
?>
